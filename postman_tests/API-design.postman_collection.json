{
	"info": {
		"_postman_id": "b56fa797-d22b-44e6-aed7-a4ea74c63a2c",
		"name": "API-design",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14191742"
	},
	"item": [
		{
			"name": "All OK responses",
			"item": [
				{
					"name": "http://localhost:8080/api/v1/",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user - 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Johan\",\n  \"lastName\": \"Stensson\",\n  \"username\": \"Lilljohan\",\n  \"password\": \"Test123!!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JWT should be set to global variable\", function () {",
									"    pm.collectionVariables.set(\"accessToken\", response.access_token);",
									"    pm.expect(pm.collectionVariables.get(\"accessToken\").length > 0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Test\",\n  \"password\": \"Test123!!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all records - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post record - 201",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()",
									"pm.collectionVariables.set('record_url', response.record.links[0].href)",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"HALLOJ\",\n    \"recordTitle\": \"Two\",\n    \"releaseYear\": \"1991\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific record - 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{record_url}}",
							"host": [
								"{{record_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch specific record - 200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"THIS IS A BAND????\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{record_url}}",
							"host": [
								"{{record_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put specific record - 200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"NO BAND\",\n    \"recordTitle\": \"Is this thing on?\",\n    \"releaseYear\": \"1985\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{record_url}}",
							"host": [
								"{{record_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete specific record - 200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{record_url}}",
							"host": [
								"{{record_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://localhost:8080/api/v1/webhook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/webhook/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhook",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "http://localhost:8080/api/v1/webhook/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"https://webhook.site/5d472f2b-48b6-450c-9bbd-9bed73f9e867\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhook/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhook",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "When things go wrong",
			"item": [
				{
					"name": "Register user - 400 - Missing a required field (password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Stefan\",\n  \"lastName\": \"Andersson\",\n  \"username\": \"Lulle\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user - 409 - Already registered user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Stefan\",\n  \"lastName\": \"Andersson\",\n  \"username\": \"Lulle\",\n  \"password\": \"Test123!!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user - 401 - Wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Test\",\n  \"password\": \"Test123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user - 401 - Missing a required field (password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post record - 400 - Missing a required field (Artist)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recordTitle\": \"Two\",\n    \"releaseYear\": \"1991\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post record - 401 - Wrong access token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('access_Token')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"WHO\",\n    \"recordTitle\": \"Two\",\n    \"releaseYear\": \"1991\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific record - 404 - Missing record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/record/6422f9cf27606d55650ee81b",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"6422f9cf27606d55650ee81b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user - 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JWT should be set to global variable\", function () {",
									"    pm.collectionVariables.set(\"accessToken\", response.access_token);",
									"    pm.expect(pm.collectionVariables.get(\"accessToken\").length > 0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Test\",\n  \"password\": \"Test123!!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post record - 201 Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()",
									"pm.collectionVariables.set('record_url', response.record.links[0].href)",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"HALLOJ\",\n    \"recordTitle\": \"Two\",\n    \"releaseYear\": \"1991\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch specific record - 403 - Forbbiden to patch somebody elses record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"THIS IS A BAND????\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record/6426d28e486c443d373530c1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"6426d28e486c443d373530c1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch specific record - 404 - Patch a non existing record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"THIS IS A BAND????\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record/69193996f2a6b1b7a6742597",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"69193996f2a6b1b7a6742597"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put specific record - 403 - Forbbiden to put somebody elses record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"NO BAND\",\n    \"recordTitle\": \"Is this thing on?\",\n    \"releaseYear\": \"1985\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record/6426d28e486c443d373530c1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"6426d28e486c443d373530c1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put specific record - 404 - Put a non existing record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"artist\": \"NO BAND\",\n    \"recordTitle\": \"Is this thing on?\",\n    \"releaseYear\": \"1985\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/record/69193996f2a6b1b7a6742597",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"69193996f2a6b1b7a6742597"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete specific record - 403 - Forbbiden to delete somebody elses record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/record/6426d28e486c443d373530c1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"6426d28e486c443d373530c1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete specific record - 404 - Delete a non existing record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({",
									"    key: 'Authorization',",
									"    value: 'Bearer ' + pm.collectionVariables.get('accessToken')",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/record/69193996f2a6b1b7a6742597",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"record",
								"69193996f2a6b1b7a6742597"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register - 400 - Missing URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhook/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhook",
								"register"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://1dv027-api-design-production.up.railway.app/api/v1",
			"type": "string"
		},
		{
			"key": "record_url",
			"value": "https://1dv027-api-design-production.up.railway.app/api/v1/record/64271d9609e56b6df6880875",
			"type": "string"
		}
	]
}